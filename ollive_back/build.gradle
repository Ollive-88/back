plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.palpalmans'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// MonoDB 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	testImplementation 'org.springframework.security:spring-security-test'

	//web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
}

def querydslSrcDir =  layout.buildDirectory.dir("querydsl") //'src/main/generated'
clean {
	delete file(querydslSrcDir)
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs '-Xshare:off' // JVM 아규먼트 설정
}
