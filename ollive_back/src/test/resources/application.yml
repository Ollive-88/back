spring:
  config:
    import:
      - optional:file:env/.env[.properties]

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${TEST_DB_URL}
    username: ${TEST_DB_USERNAME}
    password: ${TEST_DB_PASSWORD}

  sql:
    init:
      mode: always
      schema-locations: classpath:/sql/init.sql

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  jwt:
    secret: ${JWT_SECRET_KEY}

  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email

  data:
    mongodb:
      database: ${MONGO_DATABASE}
      authentication-database: ${MONGO_AUTHENTICATION_DATABASE}
      username: ${MONGO_USERNAME}
      password: ${MONGO_PASSWORD}
      host: ${MONGO_HOST}
      port: ${MONGO_PORT}
      field-naming-strategy: org.springframework.data.mapping.model.SnakeCaseFieldNamingStrategy

cloth:
  weather:
    baseUrl: ${WEATHER_URL}
    serviceKey: ${WEATHER_SERVICE_KEY}

minio:
  url: ${MINIO_URL}
  dir:
    image: ${MINIO_IMAGE_DIR}
  bucket:
    name: ${MINIO_TEST_BUCKET}
  access:
    name: ${MINIO_ACCESS_KEY}
    secret: ${MINIO_SECRET_KEY}